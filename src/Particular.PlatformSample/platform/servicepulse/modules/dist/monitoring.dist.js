/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 522);
/******/ })
/************************************************************************/
/******/ ({

/***/ 177:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n;\n(function (window, angular, $, undefined) {\n    'use strict';\n\n    function Service(toastService, scConfig) {\n\n        var isConnectedToSourceIndex = Array(scConfig.monitoring_urls.length).fill(true);\n        var connectivitySource = new Rx.Subject();\n        var shouldShowFailedMessage = true;\n\n        function reportFailedConnection(sourceIndex) {\n\n            if (isConnectedToSourceIndex[sourceIndex]) {\n                var message = 'Could not connect to the ServiceControl Monitoring service.';\n                if (scConfig.monitoring_urls.length > 1) {\n                    message = 'Could not connect to the ServiceControl Monitoring service at' + scConfig.monitoring_urls[sourceIndex] + '.';\n                }\n                console.log(message);\n                if (shouldShowFailedMessage) {\n                    toastService.showError(message);\n                    shouldShowFailedMessage = false;\n                }\n            }\n            isConnectedToSourceIndex[sourceIndex] = false;\n            emitChange(isConnectedToSourceIndex);\n        }\n\n        function reportSuccessfulConnection(sourceIndex) {\n            if (!isConnectedToSourceIndex[sourceIndex]) {\n                var message = 'Connection to ServiceControl Monitoring service was successful.';\n                if (scConfig.monitoring_urls.length > 1) {\n                    message = 'Connection to ServiceControl Monitoring service was successful ' + scConfig.monitoring_urls[sourceIndex] + '.';\n                }\n                console.log(message);\n                shouldShowFailedMessage = true;\n            }\n            isConnectedToSourceIndex[sourceIndex] = true;\n            emitChange(isConnectedToSourceIndex);\n        }\n\n        function emitChange(connectedToSourceIndex) {\n            var result = connectedToSourceIndex.every(function (item) {\n                return item;\n            });\n            connectivitySource.onNext(result);\n        };\n\n        function getConnectionStatusSource() {\n            return connectivitySource;\n        }\n\n        var service = {\n            reportFailedConnection: reportFailedConnection,\n            reportSuccessfulConnection: reportSuccessfulConnection,\n            getConnectionStatusSource: getConnectionStatusSource\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['toastService', 'scConfig'];\n\n    angular.module('services.connectivityNotifier', ['sc']).service('connectivityNotifier', Service);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyLmpzP2RjZjYiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJ1bmRlZmluZWQiLCJTZXJ2aWNlIiwidG9hc3RTZXJ2aWNlIiwic2NDb25maWciLCJpc0Nvbm5lY3RlZFRvU291cmNlSW5kZXgiLCJBcnJheSIsIm1vbml0b3JpbmdfdXJscyIsImxlbmd0aCIsImZpbGwiLCJjb25uZWN0aXZpdHlTb3VyY2UiLCJSeCIsIlN1YmplY3QiLCJzaG91bGRTaG93RmFpbGVkTWVzc2FnZSIsInJlcG9ydEZhaWxlZENvbm5lY3Rpb24iLCJzb3VyY2VJbmRleCIsIm1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwic2hvd0Vycm9yIiwiZW1pdENoYW5nZSIsInJlcG9ydFN1Y2Nlc3NmdWxDb25uZWN0aW9uIiwiY29ubmVjdGVkVG9Tb3VyY2VJbmRleCIsInJlc3VsdCIsImV2ZXJ5IiwiaXRlbSIsIm9uTmV4dCIsImdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UiLCJzZXJ2aWNlIiwiJGluamVjdCIsIm1vZHVsZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QkMsU0FBOUIsRUFBeUM7QUFDdEM7O0FBRUEsYUFBU0MsT0FBVCxDQUFpQkMsWUFBakIsRUFBK0JDLFFBQS9CLEVBQXlDOztBQUVyQyxZQUFJQywyQkFBMkJDLE1BQU1GLFNBQVNHLGVBQVQsQ0FBeUJDLE1BQS9CLEVBQXVDQyxJQUF2QyxDQUE0QyxJQUE1QyxDQUEvQjtBQUNBLFlBQUlDLHFCQUFxQixJQUFJQyxHQUFHQyxPQUFQLEVBQXpCO0FBQ0EsWUFBSUMsMEJBQTBCLElBQTlCOztBQUVBLGlCQUFTQyxzQkFBVCxDQUFnQ0MsV0FBaEMsRUFBNkM7O0FBRXpDLGdCQUFJVix5QkFBeUJVLFdBQXpCLENBQUosRUFBMkM7QUFDdkMsb0JBQUlDLFVBQVUsNkRBQWQ7QUFDQSxvQkFBSVosU0FBU0csZUFBVCxDQUF5QkMsTUFBekIsR0FBa0MsQ0FBdEMsRUFBeUM7QUFDckNRLDhCQUFVLGtFQUFrRVosU0FBU0csZUFBVCxDQUF5QlEsV0FBekIsQ0FBbEUsR0FBMEcsR0FBcEg7QUFDSDtBQUNERSx3QkFBUUMsR0FBUixDQUFZRixPQUFaO0FBQ0Esb0JBQUlILHVCQUFKLEVBQTZCO0FBQ3pCVixpQ0FBYWdCLFNBQWIsQ0FBdUJILE9BQXZCO0FBQ0FILDhDQUEwQixLQUExQjtBQUNIO0FBQ0o7QUFDRFIscUNBQXlCVSxXQUF6QixJQUF3QyxLQUF4QztBQUNBSyx1QkFBV2Ysd0JBQVg7QUFDSDs7QUFFRCxpQkFBU2dCLDBCQUFULENBQW9DTixXQUFwQyxFQUFpRDtBQUM3QyxnQkFBSSxDQUFDVix5QkFBeUJVLFdBQXpCLENBQUwsRUFBNEM7QUFDeEMsb0JBQUlDLFVBQVUsaUVBQWQ7QUFDQSxvQkFBSVosU0FBU0csZUFBVCxDQUF5QkMsTUFBekIsR0FBa0MsQ0FBdEMsRUFBeUM7QUFDckNRLDhCQUFVLG9FQUFvRVosU0FBU0csZUFBVCxDQUF5QlEsV0FBekIsQ0FBcEUsR0FBMkcsR0FBckg7QUFDSDtBQUNERSx3QkFBUUMsR0FBUixDQUFZRixPQUFaO0FBQ0FILDBDQUEwQixJQUExQjtBQUNIO0FBQ0RSLHFDQUF5QlUsV0FBekIsSUFBd0MsSUFBeEM7QUFDQUssdUJBQVdmLHdCQUFYO0FBQ0g7O0FBRUQsaUJBQVNlLFVBQVQsQ0FBb0JFLHNCQUFwQixFQUE0QztBQUN4QyxnQkFBSUMsU0FBU0QsdUJBQXVCRSxLQUF2QixDQUE2QjtBQUFBLHVCQUFRQyxJQUFSO0FBQUEsYUFBN0IsQ0FBYjtBQUNBZiwrQkFBbUJnQixNQUFuQixDQUEwQkgsTUFBMUI7QUFDSDs7QUFFRCxpQkFBU0kseUJBQVQsR0FBcUM7QUFDakMsbUJBQU9qQixrQkFBUDtBQUNIOztBQUVELFlBQUlrQixVQUFVO0FBQ1ZkLG9DQUF3QkEsc0JBRGQ7QUFFVk8sd0NBQTRCQSwwQkFGbEI7QUFHVk0sdUNBQTJCQTtBQUhqQixTQUFkOztBQU9BLGVBQU9DLE9BQVA7QUFDSDs7QUFFRDFCLFlBQVEyQixPQUFSLEdBQWtCLENBQUMsY0FBRCxFQUFpQixVQUFqQixDQUFsQjs7QUFFQTlCLFlBQVErQixNQUFSLENBQWUsK0JBQWYsRUFBZ0QsQ0FBQyxJQUFELENBQWhELEVBQ0tGLE9BREwsQ0FDYSxzQkFEYixFQUNxQzFCLE9BRHJDO0FBRUgsQ0E5REEsRUE4RENKLE1BOURELEVBOERTQSxPQUFPQyxPQTlEaEIsRUE4RHlCRCxPQUFPaUMsTUE5RGhDLENBQUQiLCJmaWxlIjoiMTc3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiO1xyXG4oZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCwgdW5kZWZpbmVkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gU2VydmljZSh0b2FzdFNlcnZpY2UsIHNjQ29uZmlnKSB7XHJcblxyXG4gICAgICAgIHZhciBpc0Nvbm5lY3RlZFRvU291cmNlSW5kZXggPSBBcnJheShzY0NvbmZpZy5tb25pdG9yaW5nX3VybHMubGVuZ3RoKS5maWxsKHRydWUpO1xyXG4gICAgICAgIHZhciBjb25uZWN0aXZpdHlTb3VyY2UgPSBuZXcgUnguU3ViamVjdCgpO1xyXG4gICAgICAgIHZhciBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IHRydWU7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlcG9ydEZhaWxlZENvbm5lY3Rpb24oc291cmNlSW5kZXgpIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc0Nvbm5lY3RlZFRvU291cmNlSW5kZXhbc291cmNlSW5kZXhdKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9ICdDb3VsZCBub3QgY29ubmVjdCB0byB0aGUgU2VydmljZUNvbnRyb2wgTW9uaXRvcmluZyBzZXJ2aWNlLic7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2NDb25maWcubW9uaXRvcmluZ191cmxzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0gJ0NvdWxkIG5vdCBjb25uZWN0IHRvIHRoZSBTZXJ2aWNlQ29udHJvbCBNb25pdG9yaW5nIHNlcnZpY2UgYXQnICsgc2NDb25maWcubW9uaXRvcmluZ191cmxzW3NvdXJjZUluZGV4XSArICcuJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHNob3VsZFNob3dGYWlsZWRNZXNzYWdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9hc3RTZXJ2aWNlLnNob3dFcnJvcihtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzQ29ubmVjdGVkVG9Tb3VyY2VJbmRleFtzb3VyY2VJbmRleF0gPSBmYWxzZTtcclxuICAgICAgICAgICAgZW1pdENoYW5nZShpc0Nvbm5lY3RlZFRvU291cmNlSW5kZXgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb24oc291cmNlSW5kZXgpIHtcclxuICAgICAgICAgICAgaWYgKCFpc0Nvbm5lY3RlZFRvU291cmNlSW5kZXhbc291cmNlSW5kZXhdKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9ICdDb25uZWN0aW9uIHRvIFNlcnZpY2VDb250cm9sIE1vbml0b3Jpbmcgc2VydmljZSB3YXMgc3VjY2Vzc2Z1bC4nO1xyXG4gICAgICAgICAgICAgICAgaWYgKHNjQ29uZmlnLm1vbml0b3JpbmdfdXJscy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSA9ICdDb25uZWN0aW9uIHRvIFNlcnZpY2VDb250cm9sIE1vbml0b3Jpbmcgc2VydmljZSB3YXMgc3VjY2Vzc2Z1bCAnICsgc2NDb25maWcubW9uaXRvcmluZ191cmxzW3NvdXJjZUluZGV4XSArJy4nO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaXNDb25uZWN0ZWRUb1NvdXJjZUluZGV4W3NvdXJjZUluZGV4XSA9IHRydWU7XHJcbiAgICAgICAgICAgIGVtaXRDaGFuZ2UoaXNDb25uZWN0ZWRUb1NvdXJjZUluZGV4KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGVtaXRDaGFuZ2UoY29ubmVjdGVkVG9Tb3VyY2VJbmRleCkge1xyXG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gY29ubmVjdGVkVG9Tb3VyY2VJbmRleC5ldmVyeShpdGVtID0+IGl0ZW0pO1xyXG4gICAgICAgICAgICBjb25uZWN0aXZpdHlTb3VyY2Uub25OZXh0KHJlc3VsdCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZSgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpdml0eVNvdXJjZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBzZXJ2aWNlID0ge1xyXG4gICAgICAgICAgICByZXBvcnRGYWlsZWRDb25uZWN0aW9uOiByZXBvcnRGYWlsZWRDb25uZWN0aW9uLFxyXG4gICAgICAgICAgICByZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbjogcmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb24sXHJcbiAgICAgICAgICAgIGdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2U6IGdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgcmV0dXJuIHNlcnZpY2U7XHJcbiAgICB9XHJcblxyXG4gICAgU2VydmljZS4kaW5qZWN0ID0gWyd0b2FzdFNlcnZpY2UnLCAnc2NDb25maWcnXTtcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnc2VydmljZXMuY29ubmVjdGl2aXR5Tm90aWZpZXInLCBbJ3NjJ10pXHJcbiAgICAgICAgLnNlcnZpY2UoJ2Nvbm5lY3Rpdml0eU5vdGlmaWVyJywgU2VydmljZSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSkpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvc2VydmljZXMvc2VydmljZXMuY29ubmVjdGl2aXR5Tm90aWZpZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///177\n");

/***/ }),

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n;(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('monitored_endpoints').constant('largeGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughputRetries': 10,\n        'processingCritical': 10\n    }).constant('smallGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughput': 10,\n        'retries': 10,\n        'processingTime': 10,\n        'criticalTime': 10\n    });\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2NvbnN0YW50LmRpYWdyYW1zLmpzPzhjMjkiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImNvbnN0YW50Il0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUcsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLFNBQTNCLEVBQXNDO0FBQ3JDOztBQUVBRCxZQUFRRSxNQUFSLENBQWUscUJBQWYsRUFDS0MsUUFETCxDQUNjLHlCQURkLEVBQ3lDO0FBQzdCLHVCQUFlLEVBRGM7QUFFN0IsNkJBQXFCLEVBRlE7QUFHN0IsOEJBQXNCO0FBSE8sS0FEekMsRUFNS0EsUUFOTCxDQU1jLHlCQU5kLEVBTXlDO0FBQ2pDLHVCQUFlLEVBRGtCO0FBRWpDLHNCQUFjLEVBRm1CO0FBR2pDLG1CQUFXLEVBSHNCO0FBSWpDLDBCQUFrQixFQUplO0FBS2pDLHdCQUFnQjtBQUxpQixLQU56QztBQWNILENBakJFLEVBaUJESixNQWpCQyxFQWlCT0EsT0FBT0MsT0FqQmQsQ0FBRCIsImZpbGUiOiIxNzguanMiLCJzb3VyY2VzQ29udGVudCI6WyI7IChmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCB1bmRlZmluZWQpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnbW9uaXRvcmVkX2VuZHBvaW50cycpXHJcbiAgICAgICAgLmNvbnN0YW50KCdsYXJnZUdyYXBoc01pbmltdW1ZQXhpcycsIHtcclxuICAgICAgICAgICAgICAgICdxdWV1ZUxlbmd0aCc6IDEwLFxyXG4gICAgICAgICAgICAgICAgJ3Rocm91Z2hwdXRSZXRyaWVzJzogMTAsXHJcbiAgICAgICAgICAgICAgICAncHJvY2Vzc2luZ0NyaXRpY2FsJzogMTAsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgLmNvbnN0YW50KCdzbWFsbEdyYXBoc01pbmltdW1ZQXhpcycsIHtcclxuICAgICAgICAgICAgJ3F1ZXVlTGVuZ3RoJzogMTAsXHJcbiAgICAgICAgICAgICd0aHJvdWdocHV0JzogMTAsXHJcbiAgICAgICAgICAgICdyZXRyaWVzJzogMTAsXHJcbiAgICAgICAgICAgICdwcm9jZXNzaW5nVGltZSc6IDEwLFxyXG4gICAgICAgICAgICAnY3JpdGljYWxUaW1lJzogMTAsXHJcbiAgICAgICAgfSk7XHJcblxyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9jb25zdGFudC5kaWFncmFtcy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///178\n");

/***/ }),

/***/ 179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n;(function (window, angular, $, undefined) {\n    'use strict';\n\n    function controller($scope, connectivityNotifier, monitoringService, $interval) {\n        $scope.isSCMonitoringConnecting = true;\n        connectivityNotifier.getConnectionStatusSource().subscribe(function (value) {\n            $scope.isSCMonitoringConnected = value;\n            $scope.isSCMonitoringConnecting = false;\n        });\n\n        var scMonitoringConnectionPing = $interval(function () {\n            var promises = monitoringService.getMonitoredEndpoints().map(function (request, index) {\n                request.then(function (r) {\n                    connectivityNotifier.reportSuccessfulConnection(index);\n                }, function (e) {\n                    connectivityNotifier.reportFailedConnection(index);\n                });\n            });\n        }, 10000);\n\n        // Cancel interval on page changes\n        $scope.$on('$destroy', function () {\n            if (angular.isDefined(scMonitoringConnectionPing)) {\n                $interval.cancel(scMonitoringConnectionPing);\n                scMonitoringConnectionPing = undefined;\n            }\n        });\n    }\n\n    controller.$inject = ['$scope', 'connectivityNotifier', 'monitoringService', '$interval'];\n\n    function directive() {\n        return {\n            scope: {},\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'modules/monitoring/js/directives/ui.particular.monitoringConnectivityStatus.tpl.html',\n            controller: controller,\n            link: function link(scope, element) {}\n        };\n    }\n\n    directive.$inject = [];\n\n    angular.module('ui.particular.monitoringConnectivityStatus', []).directive('monitoringConnectivityStatus', directive);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLmpzPzFhZGQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJ1bmRlZmluZWQiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiY29ubmVjdGl2aXR5Tm90aWZpZXIiLCJtb25pdG9yaW5nU2VydmljZSIsIiRpbnRlcnZhbCIsImlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyIsImdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UiLCJzdWJzY3JpYmUiLCJpc1NDTW9uaXRvcmluZ0Nvbm5lY3RlZCIsInZhbHVlIiwic2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmciLCJwcm9taXNlcyIsImdldE1vbml0b3JlZEVuZHBvaW50cyIsIm1hcCIsInJlcXVlc3QiLCJpbmRleCIsInRoZW4iLCJyZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbiIsInJlcG9ydEZhaWxlZENvbm5lY3Rpb24iLCIkb24iLCJpc0RlZmluZWQiLCJjYW5jZWwiLCIkaW5qZWN0IiwiZGlyZWN0aXZlIiwic2NvcGUiLCJyZXN0cmljdCIsInJlcGxhY2UiLCJ0ZW1wbGF0ZVVybCIsImxpbmsiLCJlbGVtZW50IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUNBLENBQUcsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLENBQTNCLEVBQThCQyxTQUE5QixFQUF5QztBQUN4Qzs7QUFHQSxhQUFTQyxVQUFULENBQW9CQyxNQUFwQixFQUE0QkMsb0JBQTVCLEVBQWtEQyxpQkFBbEQsRUFBcUVDLFNBQXJFLEVBQWdGO0FBQzVFSCxlQUFPSSx3QkFBUCxHQUFrQyxJQUFsQztBQUNBSCw2QkFBcUJJLHlCQUFyQixHQUFpREMsU0FBakQsQ0FBMkQsaUJBQVM7QUFDaEVOLG1CQUFPTyx1QkFBUCxHQUFpQ0MsS0FBakM7QUFDQVIsbUJBQU9JLHdCQUFQLEdBQWtDLEtBQWxDO0FBQ0gsU0FIRDs7QUFLQSxZQUFJSyw2QkFBNkJOLFVBQVUsWUFBWTtBQUNuRCxnQkFBSU8sV0FBV1Isa0JBQWtCUyxxQkFBbEIsR0FBMENDLEdBQTFDLENBQThDLFVBQUNDLE9BQUQsRUFBVUMsS0FBVixFQUFvQjtBQUM3RUQsd0JBQVFFLElBQVIsQ0FBYSxhQUFLO0FBQ2RkLHlDQUFxQmUsMEJBQXJCLENBQWdERixLQUFoRDtBQUNILGlCQUZELEVBRUcsYUFBSztBQUNKYix5Q0FBcUJnQixzQkFBckIsQ0FBNENILEtBQTVDO0FBQ0gsaUJBSkQ7QUFLSCxhQU5jLENBQWY7QUFPSCxTQVJnQyxFQVE5QixLQVI4QixDQUFqQzs7QUFVQTtBQUNBZCxlQUFPa0IsR0FBUCxDQUFXLFVBQVgsRUFBdUIsWUFBWTtBQUMvQixnQkFBSXRCLFFBQVF1QixTQUFSLENBQWtCViwwQkFBbEIsQ0FBSixFQUFtRDtBQUMvQ04sMEJBQVVpQixNQUFWLENBQWlCWCwwQkFBakI7QUFDQUEsNkNBQTZCWCxTQUE3QjtBQUNIO0FBQ0osU0FMRDtBQU1IOztBQU1EQyxlQUFXc0IsT0FBWCxHQUFxQixDQUFDLFFBQUQsRUFBVyxzQkFBWCxFQUFtQyxtQkFBbkMsRUFBd0QsV0FBeEQsQ0FBckI7O0FBRUEsYUFBU0MsU0FBVCxHQUFxQjtBQUNqQixlQUFPO0FBQ0hDLG1CQUFPLEVBREo7QUFFSEMsc0JBQVUsR0FGUDtBQUdIQyxxQkFBUyxJQUhOO0FBSUhDLHlCQUFhLHNGQUpWO0FBS0gzQix3QkFBWUEsVUFMVDtBQU1INEIsa0JBQU0sY0FBVUosS0FBVixFQUFpQkssT0FBakIsRUFBMEIsQ0FBRztBQU5oQyxTQUFQO0FBUUg7O0FBRUROLGNBQVVELE9BQVYsR0FBb0IsRUFBcEI7O0FBRUF6QixZQUNLaUMsTUFETCxDQUNZLDRDQURaLEVBQzBELEVBRDFELEVBRUtQLFNBRkwsQ0FFZSw4QkFGZixFQUUrQ0EsU0FGL0M7QUFJSCxDQXJERSxFQXFERDNCLE1BckRDLEVBcURPQSxPQUFPQyxPQXJEZCxFQXFEdUJELE9BQU9tQyxNQXJEOUIsQ0FBRCIsImZpbGUiOiIxNzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuOyAoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCwgdW5kZWZpbmVkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIGNvbnRyb2xsZXIoJHNjb3BlLCBjb25uZWN0aXZpdHlOb3RpZmllciwgbW9uaXRvcmluZ1NlcnZpY2UsICRpbnRlcnZhbCkge1xyXG4gICAgICAgICRzY29wZS5pc1NDTW9uaXRvcmluZ0Nvbm5lY3RpbmcgPSB0cnVlO1xyXG4gICAgICAgIGNvbm5lY3Rpdml0eU5vdGlmaWVyLmdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UoKS5zdWJzY3JpYmUodmFsdWUgPT4ge1xyXG4gICAgICAgICAgICAkc2NvcGUuaXNTQ01vbml0b3JpbmdDb25uZWN0ZWQgPSB2YWx1ZTtcclxuICAgICAgICAgICAgJHNjb3BlLmlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyA9IGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcgPSAkaW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcHJvbWlzZXMgPSBtb25pdG9yaW5nU2VydmljZS5nZXRNb25pdG9yZWRFbmRwb2ludHMoKS5tYXAoKHJlcXVlc3QsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0LnRoZW4ociA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGl2aXR5Tm90aWZpZXIucmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb24oaW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgfSwgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGl2aXR5Tm90aWZpZXIucmVwb3J0RmFpbGVkQ29ubmVjdGlvbihpbmRleCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgMTAwMDApO1xyXG5cclxuICAgICAgICAvLyBDYW5jZWwgaW50ZXJ2YWwgb24gcGFnZSBjaGFuZ2VzXHJcbiAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzRGVmaW5lZChzY01vbml0b3JpbmdDb25uZWN0aW9uUGluZykpIHtcclxuICAgICAgICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcpO1xyXG4gICAgICAgICAgICAgICAgc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBcclxuXHJcbiAgICBcclxuXHJcbiAgICBjb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICdjb25uZWN0aXZpdHlOb3RpZmllcicsICdtb25pdG9yaW5nU2VydmljZScsICckaW50ZXJ2YWwnXTtcclxuXHJcbiAgICBmdW5jdGlvbiBkaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgc2NvcGU6IHt9LFxyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiB0cnVlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cy50cGwuaHRtbCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IGNvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCkgeyB9XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBkaXJlY3RpdmUuJGluamVjdCA9IFtdO1xyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLm1vbml0b3JpbmdDb25uZWN0aXZpdHlTdGF0dXMnLCBbXSlcclxuICAgICAgICAuZGlyZWN0aXZlKCdtb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzJywgZGlyZWN0aXZlKTtcclxuXHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSkpO1xyXG5cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///179\n");

/***/ }),

/***/ 180:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('ui.particular.graph', []).directive('graph', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                plotData: '=',\n                formatter: '&',\n                minimumYaxis: '@'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.plotData = scope.plotData || { points: [], average: 0 };\n\n                scope.$watch('plotData', function () {\n                    var svg = element.find('svg')[0];\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var verticalMargin = 6;\n                    var horizontalMargin = 2;\n\n                    var points = scope.plotData.points;\n                    if (points.length === 0) {\n                        points = new Array(10).fill(0);\n                    }\n                    var average = scope.plotData.average || 0;\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = points && points.length ? Math.max(average * 1.5, d3.max(points), minimumYaxis) : 1;\n                    var numberOfPoints = points && points.length ? points.length : 2;\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - verticalMargin, verticalMargin]);\n\n                    var scaleX = d3.scaleLinear().domain([0, numberOfPoints - 1]).range([horizontalMargin, width - horizontalMargin]);\n\n                    var area = d3.area().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).y1(function (d) {\n                        return scaleY(0);\n                    }).curve(d3.curveLinear);\n\n                    var line = d3.line().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).curve(d3.curveLinear);\n\n                    d3.select(svg).selectAll(\"*\").remove();\n\n                    var chart = d3.select(svg).attr('width', width).attr('height', height);\n\n                    chart.append('rect').attr('width', width - 2 * horizontalMargin).attr('height', height - 2 * verticalMargin).attr('transform', 'translate(' + horizontalMargin + ',' + verticalMargin + ')').attr('fill', '#F2F6F7');\n\n                    if (points) {\n                        chart.append('path').datum(points).attr('d', area).attr('class', 'graph-data-fill');\n\n                        chart.append('path').datum(points).attr('d', line).attr('class', 'graph-data-line');\n                    }\n\n                    chart.append('path').datum(Array(numberOfPoints).fill(average)).attr('d', line).attr('class', 'graph-avg-line');\n                });\n            }\n        };\n    });\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///180\n");

/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('ui.particular.graphdecimal', []).filter('graphdecimal', ['$filter', function ($filter) {\n        return function (input, decimals) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = $filter(\"metricslargenumber\")(lastValue, decimals);\n            } else {\n                input = {\n                    points: [],\n                    average: 0,\n                    displayValue: 0\n                };\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGRlY2ltYWwuanM/NTFkMyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZmlsdGVyIiwiJGZpbHRlciIsImlucHV0IiwiZGVjaW1hbHMiLCJsYXN0VmFsdWUiLCJwb2ludHMiLCJsZW5ndGgiLCJkaXNwbGF5VmFsdWUiLCJhdmVyYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxTQUEzQixFQUFzQztBQUNuQzs7QUFFQUQsWUFBUUUsTUFBUixDQUFlLDRCQUFmLEVBQTZDLEVBQTdDLEVBQ0tDLE1BREwsQ0FDWSxjQURaLEVBQzRCLENBQUMsU0FBRCxFQUFZLFVBQVVDLE9BQVYsRUFBbUI7QUFDbkQsZUFBTyxVQUFVQyxLQUFWLEVBQWlCQyxRQUFqQixFQUEyQjtBQUM5QixnQkFBSUQsS0FBSixFQUFXO0FBQ1Asb0JBQUlFLFlBQVlGLE1BQU1HLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUF0QixHQUEwQkosTUFBTUcsTUFBTixDQUFhSCxNQUFNRyxNQUFOLENBQWFDLE1BQWIsR0FBc0IsQ0FBbkMsQ0FBMUIsR0FBa0UsQ0FBbEY7QUFDQUosc0JBQU1LLFlBQU4sR0FBcUJOLFFBQVEsb0JBQVIsRUFBOEJHLFNBQTlCLEVBQXlDRCxRQUF6QyxDQUFyQjtBQUNILGFBSEQsTUFHTztBQUNIRCx3QkFBUTtBQUNKRyw0QkFBUSxFQURKO0FBRUpHLDZCQUFTLENBRkw7QUFHSkQsa0NBQWM7QUFIVixpQkFBUjtBQUtIOztBQUVELG1CQUFPTCxLQUFQO0FBQ0gsU0FiRDtBQWNILEtBZnVCLENBRDVCO0FBaUJILENBcEJBLEVBb0JDTixNQXBCRCxFQW9CU0EsT0FBT0MsT0FwQmhCLENBQUQiLCJmaWxlIjoiMTgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIsIHVuZGVmaW5lZCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLmdyYXBoZGVjaW1hbCcsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2dyYXBoZGVjaW1hbCcsIFsnJGZpbHRlcicsIGZ1bmN0aW9uICgkZmlsdGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQsIGRlY2ltYWxzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdFZhbHVlID0gaW5wdXQucG9pbnRzLmxlbmd0aCA+IDAgPyBpbnB1dC5wb2ludHNbaW5wdXQucG9pbnRzLmxlbmd0aCAtIDFdIDogMDtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5kaXNwbGF5VmFsdWUgPSAkZmlsdGVyKFwibWV0cmljc2xhcmdlbnVtYmVyXCIpKGxhc3RWYWx1ZSwgZGVjaW1hbHMpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXZlcmFnZTogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheVZhbHVlOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkZWNpbWFsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///181\n");

/***/ }),

/***/ 182:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('ui.particular.graphduration', []).filter('graphduration', ['formatter', function (formatter) {\n        return function (input) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = formatter.formatTime(lastValue);\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGR1cmF0aW9uLmpzP2Y3NWIiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImZpbHRlciIsImZvcm1hdHRlciIsImlucHV0IiwibGFzdFZhbHVlIiwicG9pbnRzIiwibGVuZ3RoIiwiZGlzcGxheVZhbHVlIiwiZm9ybWF0VGltZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUEyQkMsU0FBM0IsRUFBc0M7QUFDbkM7O0FBRUFELFlBQVFFLE1BQVIsQ0FBZSw2QkFBZixFQUE4QyxFQUE5QyxFQUNLQyxNQURMLENBQ1ksZUFEWixFQUM2QixDQUFDLFdBQUQsRUFBYyxVQUFVQyxTQUFWLEVBQXFCO0FBQ3hELGVBQU8sVUFBVUMsS0FBVixFQUFpQjtBQUNwQixnQkFBSUEsS0FBSixFQUFXO0FBQ1Asb0JBQUlDLFlBQVlELE1BQU1FLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUF0QixHQUEwQkgsTUFBTUUsTUFBTixDQUFhRixNQUFNRSxNQUFOLENBQWFDLE1BQWIsR0FBc0IsQ0FBbkMsQ0FBMUIsR0FBa0UsQ0FBbEY7QUFDQUgsc0JBQU1JLFlBQU4sR0FBcUJMLFVBQVVNLFVBQVYsQ0FBcUJKLFNBQXJCLENBQXJCO0FBQ0g7O0FBRUQsbUJBQU9ELEtBQVA7QUFDSCxTQVBEO0FBUUgsS0FUd0IsQ0FEN0I7QUFXSCxDQWRBLEVBY0NOLE1BZEQsRUFjU0EsT0FBT0MsT0FkaEIsQ0FBRCIsImZpbGUiOiIxODIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgdW5kZWZpbmVkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbicsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2dyYXBoZHVyYXRpb24nLCBbJ2Zvcm1hdHRlcicsIGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RWYWx1ZSA9IGlucHV0LnBvaW50cy5sZW5ndGggPiAwID8gaW5wdXQucG9pbnRzW2lucHV0LnBvaW50cy5sZW5ndGggLSAxXSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuZGlzcGxheVZhbHVlID0gZm9ybWF0dGVyLmZvcm1hdFRpbWUobGFzdFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///182\n");

/***/ }),

/***/ 183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.metricslargenumber', []).filter('metricslargenumber', ['formatter', function (formatter) {\n        return function (input, dec) {\n            var decimals = 0;\n            if (input < 10 || input > 1000000) {\n                decimals = 2;\n            }\n            return formatter.formatLargeNumber(input, dec || decimals);\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXIuanM/ZWQ2MSJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwibW9kdWxlIiwiZmlsdGVyIiwiZm9ybWF0dGVyIiwiaW5wdXQiLCJkZWMiLCJkZWNpbWFscyIsImZvcm1hdExhcmdlTnVtYmVyIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVNBLE1BQVQsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQzFCOztBQUVHQSxZQUFRQyxNQUFSLENBQWUsa0NBQWYsRUFBbUQsRUFBbkQsRUFDS0MsTUFETCxDQUNZLG9CQURaLEVBQ2tDLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDN0QsZUFBTyxVQUFVQyxLQUFWLEVBQWlCQyxHQUFqQixFQUFzQjtBQUN6QixnQkFBSUMsV0FBVyxDQUFmO0FBQ0EsZ0JBQUlGLFFBQVEsRUFBUixJQUFjQSxRQUFRLE9BQTFCLEVBQW1DO0FBQy9CRSwyQkFBVyxDQUFYO0FBQ0g7QUFDRCxtQkFBT0gsVUFBVUksaUJBQVYsQ0FBNEJILEtBQTVCLEVBQW1DQyxPQUFPQyxRQUExQyxDQUFQO0FBQ0gsU0FORDtBQU9ILEtBUjZCLENBRGxDO0FBVUgsQ0FiQSxFQWFDUCxNQWJELEVBYVNBLE9BQU9DLE9BYmhCLENBQUQiLCJmaWxlIjoiMTgzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKHdpbmRvdywgYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgndWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXInLCBbXSlcclxuICAgICAgICAuZmlsdGVyKCdtZXRyaWNzbGFyZ2VudW1iZXInLCBbJ2Zvcm1hdHRlcicsIGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCwgZGVjKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGVjaW1hbHMgPSAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0IDwgMTAgfHwgaW5wdXQgPiAxMDAwMDAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVjaW1hbHMgPSAyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHRlci5mb3JtYXRMYXJnZU51bWJlcihpbnB1dCwgZGVjIHx8IGRlY2ltYWxzKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1ldHJpY3NsYXJnZW51bWJlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///183\n");

/***/ }),

/***/ 522:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(523);\n__webpack_require__(528);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL21vbml0b3JpbmcuanM/ZTJhZCJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxtQkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLG1CQUFPQSxDQUFDLEdBQVIiLCJmaWxlIjoiNTIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9qcy9tb25pdG9yZWRfZW5kcG9pbnRzLm1vZHVsZScpO1xyXG5yZXF1aXJlKCcuL2pzL2VuZHBvaW50X2RldGFpbHMubW9kdWxlJyk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9tb25pdG9yaW5nLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///522\n");

/***/ }),

/***/ 523:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('monitored_endpoints', []);\n\n    __webpack_require__(524);\n    __webpack_require__(177);\n    __webpack_require__(525);\n    __webpack_require__(526);\n    __webpack_require__(178);\n\n    __webpack_require__(179);\n    __webpack_require__(180);\n    __webpack_require__(181);\n    __webpack_require__(182);\n    __webpack_require__(183);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMubW9kdWxlLmpzPzA3YmQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLFNBQTNCLEVBQXNDO0FBQ25DOztBQUNBRCxZQUFRRSxNQUFSLENBQWUscUJBQWYsRUFBc0MsRUFBdEM7O0FBRUFDLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjs7QUFFQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0gsQ0FmQSxFQWVDSixNQWZELEVBZVNBLE9BQU9DLE9BZmhCLENBQUQiLCJmaWxlIjoiNTIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIsIHVuZGVmaW5lZCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG4gICAgYW5ndWxhci5tb2R1bGUoJ21vbml0b3JlZF9lbmRwb2ludHMnLCBbXSk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9zZXJ2aWNlcy9zZXJ2aWNlcy5tb25pdG9yaW5nJyk7XHJcbiAgICByZXF1aXJlKCcuL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyJyk7XHJcbiAgICByZXF1aXJlKCcuL21vbml0b3JlZF9lbmRwb2ludHMuY29udHJvbGxlcicpO1xyXG4gICAgcmVxdWlyZSgnLi9tb25pdG9yZWRfZW5kcG9pbnRzLnJvdXRlLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2NvbnN0YW50LmRpYWdyYW1zLmpzJyk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cy5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGguanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoZGVjaW1hbC5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbi5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubWV0cmljc2xhcmdlbnVtYmVyLmpzJyk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvbW9uaXRvcmVkX2VuZHBvaW50cy5tb2R1bGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///523\n");

/***/ }),

/***/ 524:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n;\n(function (window, angular, $, undefined) {\n    'use strict';\n\n    function Service($http, rx, scConfig, uri, $q) {\n\n        function createEndpointsSource(historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromArray(loadEndpointDataFromMonitoringService(historyPeriod)).flatMap(function (p) {\n                    var o = Rx.Observable.fromPromise(p);\n                    o = o.catch(Rx.Observable.empty());\n                    return o;\n                });\n            }).selectMany(function (endpoints) {\n                return endpoints;\n            });\n        }\n\n        function loadEndpointDataFromMonitoringService(historyPeriod) {\n            return scConfig.monitoring_urls.map(function (url) {\n                return $http.get(uri.join(url, 'monitored-endpoints') + '?history=' + historyPeriod).then(function (result) {\n                    var sourceIndex = scConfig.monitoring_urls.indexOf(url);\n\n                    result.data.forEach(function (endpoint) {\n                        endpoint.sourceIndex = sourceIndex;\n                    });\n\n                    return result.data;\n                }, function (error) {\n                    var sourceIndex = scConfig.monitoring_urls.indexOf(url);\n                    return [{ error: error, sourceIndex: sourceIndex }];\n                });\n            });\n        }\n\n        function loadEndpointDetailsFromMonitoringService(endpointName, sourceIndex, historyPeriod) {\n            return $http.get(uri.join(scConfig.monitoring_urls[sourceIndex], 'monitored-endpoints', endpointName) + \"?history=\" + historyPeriod).then(function (result) {\n                filterOutSystemMessage(result.data);\n                return result.data;\n            }, function (error) {\n                return { error: error };\n            });\n        }\n\n        function filterOutSystemMessage(data) {\n            data.messageTypes = data.messageTypes.filter(function (mt) {\n                return mt.id;\n            });\n        }\n\n        function createEndpointDetailsSource(endpointName, sourceIndex, historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(loadEndpointDetailsFromMonitoringService(endpointName, sourceIndex, historyPeriod));\n            });\n        }\n\n        function getMonitoredEndpoints() {\n            return scConfig.monitoring_urls.map(function (url) {\n                return $http.get(uri.join(url, 'monitored-endpoints') + '?history=1');\n            });\n        }\n\n        var service = {\n            createEndpointsSource: createEndpointsSource,\n            createEndpointDetailsSource: createEndpointDetailsSource,\n            getMonitoredEndpoints: getMonitoredEndpoints\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['$http', 'rx', 'scConfig', 'uri', '$q', 'toastService'];\n\n    angular.module('services.monitoringService', ['sc']).service('monitoringService', Service);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///524\n");

/***/ }),

/***/ 525:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    function controller($scope, $location, monitoringService, serviceControlService, toastService, historyPeriodsService, rx, $filter, smallGraphsMinimumYAxis, connectivityNotifier) {\n\n        var subscription, endpointsFromScSubscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n        $scope.endpoints = [];\n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        $scope.getDetailsUrl = function (endpoint) {\n            return '#/monitoring/endpoint/' + endpoint.name + '/' + (endpoint.sourceIndex | 0) + '?historyPeriod=' + $scope.selectedPeriod.value;\n        };\n\n        function fillDisplayValuesForEndpoint(endpoint) {\n\n            $filter('graphduration')(endpoint.metrics.processingTime);\n            $filter('graphduration')(endpoint.metrics.criticalTime);\n            $filter('graphdecimal')(endpoint.metrics.queueLength, 0);\n            $filter('graphdecimal')(endpoint.metrics.throughput, 2);\n            $filter('graphdecimal')(endpoint.metrics.retries, 2);\n        }\n\n        function mergeIn(destination, source) {\n            for (var propName in source) {\n                if (source.hasOwnProperty(propName)) {\n                    destination[propName] = source[propName];\n                }\n            }\n        }\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            if (endpointsFromScSubscription) {\n                endpointsFromScSubscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            subscription = monitoringService.createEndpointsSource(selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection(endpoint.sourceIndex);\n                    if ($scope.endpoints) {\n                        $scope.endpoints.filter(function (item) {\n                            return item.sourceIndex === endpoint.sourceIndex;\n                        }).forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n                } else {\n                    connectivityNotifier.reportSuccessfulConnection(endpoint.sourceIndex);\n                    var index = $scope.endpoints.findIndex(function (item) {\n                        return item.name === endpoint.name;\n                    });\n\n                    endpoint.isScMonitoringDisconnected = false;\n                    fillDisplayValuesForEndpoint(endpoint);\n                    if (index >= 0) {\n                        mergeIn($scope.endpoints[index], endpoint);\n                    } else {\n                        $scope.endpoints.push(endpoint);\n\n                        $scope.endpoints.sort(function (first, second) {\n                            if (first.name < second.name) {\n                                return -1;\n                            }\n\n                            if (first.name > second.name) {\n                                return 1;\n                            }\n\n                            return 0;\n                        });\n                    }\n                }\n\n                $scope.$apply();\n            });\n\n            endpointsFromScSubscription = Rx.Observable.interval(5000).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(serviceControlService.getExceptionGroups('Endpoint Name', ''));\n            }).selectMany(function (endpoints) {\n                return endpoints.data;\n            }).subscribe(function (endpoint) {\n                if (endpoint.operation_status === 'ArchiveCompleted') {\n                    return;\n                }\n                var index = $scope.endpoints.findIndex(function (item) {\n                    return item.name === endpoint.title;\n                });\n                if (index >= 0) {\n                    $scope.endpoints[index].serviceControlId = endpoint.id;\n                    $scope.endpoints[index].errorCount = endpoint.count;\n                } else {\n                    $scope.endpoints.push({ name: endpoint.title, errorCount: endpoint.count, serviceControlId: endpoint.id, isScMonitoringDisconnected: true });\n                }\n            });\n        }\n\n        updateUI();\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n            endpointsFromScSubscription.dispose();\n        });\n    };\n\n    controller.$inject = ['$scope', '$location', 'monitoringService', 'serviceControlService', 'toastService', 'historyPeriodsService', 'rx', '$filter', 'smallGraphsMinimumYAxis', 'connectivityNotifier'];\n\n    angular.module('monitored_endpoints').controller('monitoredEndpointsCtrl', controller);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///525\n");

/***/ }),

/***/ 526:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(527);\n\n        $routeProvider.when('/monitoring', {\n            data: {\n                pageTitle: 'Monitored Endpoints'\n            },\n            template: template,\n            controller: 'monitoredEndpointsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    };\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('monitored_endpoints').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMucm91dGUuanM/MjcwNiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwidW5kZWZpbmVkIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxTQUEzQixFQUFzQztBQUNuQzs7QUFFQSxhQUFTQyxhQUFULENBQXVCQyxjQUF2QixFQUF1QztBQUNuQyxZQUFJQyxXQUFXQyxtQkFBT0EsQ0FBQyxHQUFSLENBQWY7O0FBRUFGLHVCQUFlRyxJQUFmLENBQW9CLGFBQXBCLEVBQW1DO0FBQy9CQyxrQkFBTTtBQUNGQywyQkFBVztBQURULGFBRHlCO0FBSS9CSixzQkFBVUEsUUFKcUI7QUFLL0JLLHdCQUFZLHdCQUxtQjtBQU0vQkMsMEJBQWMsSUFOaUI7QUFPL0JDLDRCQUFnQjtBQVBlLFNBQW5DO0FBU0g7O0FBRURULGtCQUFjVSxPQUFkLEdBQXdCLENBQ3BCLGdCQURvQixDQUF4Qjs7QUFJQVosWUFBUWEsTUFBUixDQUFlLHFCQUFmLEVBQ0tDLE1BREwsQ0FDWVosYUFEWjtBQUVILENBdkJBLEVBdUJFSCxNQXZCRixFQXVCVUEsT0FBT0MsT0F2QmpCLENBQUQiLCJmaWxlIjoiNTI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIsIHVuZGVmaW5lZCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJvdXRlUHJvdmlkZXIoJHJvdXRlUHJvdmlkZXIpIHtcclxuICAgICAgICBsZXQgdGVtcGxhdGUgPSByZXF1aXJlKCcuLy4uL3ZpZXdzL21vbml0b3JlZF9lbmRwb2ludHMuaHRtbCcpO1xyXG5cclxuICAgICAgICAkcm91dGVQcm92aWRlci53aGVuKCcvbW9uaXRvcmluZycsIHtcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgcGFnZVRpdGxlOiAnTW9uaXRvcmVkIEVuZHBvaW50cydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnbW9uaXRvcmVkRW5kcG9pbnRzQ3RybCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgcmVsb2FkT25TZWFyY2g6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJvdXRlUHJvdmlkZXIuJGluamVjdCA9IFtcclxuICAgICAgICAnJHJvdXRlUHJvdmlkZXInXHJcbiAgICBdO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdtb25pdG9yZWRfZW5kcG9pbnRzJylcclxuICAgICAgICAuY29uZmlnKHJvdXRlUHJvdmlkZXIpO1xyXG59ICh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9tb25pdG9yZWRfZW5kcG9pbnRzLnJvdXRlLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///526\n");

/***/ }),

/***/ 527:
/***/ (function(module, exports) {

eval("module.exports = \"<div class=container ng-show=endpoints.length> <div class=\\\"row monitoring-head\\\"> <div class=\\\"col-xs-9 no-side-padding list-section\\\"> <h1>Endpoints overview</h1> </div> <div class=\\\"col-xs-3 no-side-padding toolbar-menus\\\"> <ul class=\\\"nav nav-pills period-selector\\\"> <li role=presentation ng-repeat=\\\"period in periods\\\" ng-class=\\\"(period.value == selectedPeriod.value ? 'active' : 'notselected')\\\"> <a ng-click=selectPeriod(period) href=\\\"#/monitoring?historyPeriod={{period.value}}\\\">{{period.text}}</a> </li> </ul> </div> </div> </div> <div class=container> <section ng-show=true> <div ng-include=\\\"'modules/monitoring/views/monitoring_not_available.html'\\\" ng-show=!endpoints.length></div> <div ng-show=endpoints.length class=\\\"row box box-no-click table-head-row\\\"> <div class=\\\"col-xs-2 col-xl-7\\\"> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Endpoint name </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Queue length: The number of messages waiting to be processed in the input queue(s) of the endpoint.\\\"> Queue Length <span class=table-header-unit>(msgs)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"endpoint in endpoints\\\" ng-mouseenter=\\\"endpoint.hover1=true\\\" ng-mouseleave=\\\"endpoint.hover1=false\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-2 col-xl-7 endpoint-name name-overview\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-8 no-side-padding lead righ-side-ellipsis\\\" uib-tooltip={{endpoint.name}}> <a ng-click=\\\"endpoint.isExpanded = !endpoint.isExpanded\\\" ng-href={{getDetailsUrl(endpoint)}}>{{endpoint.name}}</a> </div> <div class=\\\"col-xs-5 no-side-padding endpoint-status\\\"> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoints-overview\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <span class=warning ng-if=endpoint.isStale> <i class=\\\"fa pa-endpoint-lost endpoints-overview\\\" uib-tooltip=\\\"Unable to connect to instance\\\"></i> </span> <span class=warning ng-if=endpoint.errorCount> <a ng-if=endpoint.errorCount class=\\\"warning btn\\\" href=#/failed-messages/groups/{{endpoint.serviceControlId}}> <i class=\\\"fa fa-envelope\\\" uib-tooltip=\\\"{{endpoint.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{endpoint.errorCount | metricslargenumber}}</span> </a> </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.queueLength minimum-yaxis={{smallGraphsMinimumYAxis.queueLength}} class=\\\"graph queue-length pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.queueLength.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.throughput.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.retries.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=endpoint.metrics.processingTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{endpoint.metrics.processingTime.displayValue.unit}}</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=endpoint.metrics.criticalTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{endpoint.metrics.criticalTime.displayValue.unit}}</span> </div> </div> </div> </div> </div> </div> </div> </div> </section> </div> \";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///527\n");

/***/ }),

/***/ 528:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('endpoint_details', []);\n\n    __webpack_require__(529);\n    __webpack_require__(177);\n    __webpack_require__(530);\n    __webpack_require__(531);\n    __webpack_require__(178);\n\n    __webpack_require__(179);\n    __webpack_require__(180);\n    __webpack_require__(181);\n    __webpack_require__(533);\n    __webpack_require__(182);\n    __webpack_require__(534);\n    __webpack_require__(183);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMubW9kdWxlLmpzPzRmMGIiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBU0EsTUFBVCxFQUFpQkMsT0FBakIsRUFBMEJDLFNBQTFCLEVBQXFDO0FBQ2xDOztBQUVBRCxZQUFRRSxNQUFSLENBQWUsa0JBQWYsRUFBbUMsRUFBbkM7O0FBRUFDLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjs7QUFFQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNILENBbEJBLEVBa0JDSixNQWxCRCxFQWtCU0EsT0FBT0MsT0FsQmhCLENBQUQiLCJmaWxlIjoiNTI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKHdpbmRvdywgYW5ndWxhciwgdW5kZWZpbmVkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2VuZHBvaW50X2RldGFpbHMnLCBbXSk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9zZXJ2aWNlcy9zZXJ2aWNlcy5tZXNzYWdlVHlwZVBhcnNlcicpO1xyXG4gICAgcmVxdWlyZSgnLi9zZXJ2aWNlcy9zZXJ2aWNlcy5jb25uZWN0aXZpdHlOb3RpZmllcicpO1xyXG4gICAgcmVxdWlyZSgnLi9lbmRwb2ludF9kZXRhaWxzLmNvbnRyb2xsZXInKTtcclxuICAgIHJlcXVpcmUoJy4vZW5kcG9pbnRfZGV0YWlscy5yb3V0ZS5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9jb25zdGFudC5kaWFncmFtcy5qcycpO1xyXG5cclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1vbml0b3JpbmdDb25uZWN0aXZpdHlTdGF0dXMuanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGRlY2ltYWwuanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmR1cmF0aW9uLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGR1cmF0aW9uLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5sYXJnZUdyYXBoLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXIuanMnKTtcclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9lbmRwb2ludF9kZXRhaWxzLm1vZHVsZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///528\n");

/***/ }),

/***/ 529:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n;\n(function (window, angular, $, undefined) {\n    'use strict';\n\n    function Service() {\n\n        function parseTheMessageTypeData(messageType) {\n            if (!messageType.typeName) return;\n\n            if (messageType.typeName.indexOf(';') > 0) {\n                var messageTypeHierarchy = messageType.typeName.split(';');\n                messageTypeHierarchy = messageTypeHierarchy.map(function (item) {\n                    var obj = {};\n                    var segments = item.split(',');\n                    obj.typeName = segments[0];\n                    obj.assemblyName = segments[1];\n                    obj.assemblyVersion = segments[2].substring(segments[2].indexOf('=') + 1);\n\n                    if (!segments[4].endsWith('=null')) {\n                        //SC monitoring fills culture only if PublicKeyToken is filled\n                        obj.culture = segments[3];\n                        obj.publicKeyToken = segments[4];\n                    }\n                    return obj;\n                });\n                messageType.messageTypeHierarchy = messageTypeHierarchy;\n                messageType.typeName = messageTypeHierarchy.reduce(function (sum, item) {\n                    return (sum ? sum + ', ' : '') + item.typeName;\n                }, '');\n                messageType.containsTypeHierarchy = true;\n                messageType.tooltipText = messageTypeHierarchy.reduce(function (sum, item) {\n                    return (sum ? sum + '<br> ' : '') + (item.typeName + ' |' + item.assemblyName + '-' + item.assemblyVersion) + (item.culture ? ' |' + item.culture : '') + (item.publicKeyToken ? ' |' + item.publicKeyToken : '');\n                }, '');\n            } else {\n                var tooltip = messageType.typeName + ' | ' + messageType.assemblyName + '-' + messageType.assemblyVersion;\n                if (messageType.culture && messageType.culture != 'null') {\n                    tooltip += ' | Culture=' + messageType.culture;\n                }\n\n                if (messageType.publicKeyToken && messageType.publicKeyToken != 'null') {\n                    tooltip += ' | PublicKeyToken=' + messageType.publicKeyToken;\n                }\n\n                messageType.tooltipText = tooltip;\n            }\n        }\n\n        var service = {\n            parseTheMessageTypeData: parseTheMessageTypeData\n        };\n\n        return service;\n    }\n\n    Service.$inject = [];\n\n    angular.module('services.messageTypeParser', ['sc']).service('messageTypeParser', Service);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyLmpzP2YzZTQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJ1bmRlZmluZWQiLCJTZXJ2aWNlIiwicGFyc2VUaGVNZXNzYWdlVHlwZURhdGEiLCJtZXNzYWdlVHlwZSIsInR5cGVOYW1lIiwiaW5kZXhPZiIsIm1lc3NhZ2VUeXBlSGllcmFyY2h5Iiwic3BsaXQiLCJtYXAiLCJpdGVtIiwib2JqIiwic2VnbWVudHMiLCJhc3NlbWJseU5hbWUiLCJhc3NlbWJseVZlcnNpb24iLCJzdWJzdHJpbmciLCJlbmRzV2l0aCIsImN1bHR1cmUiLCJwdWJsaWNLZXlUb2tlbiIsInJlZHVjZSIsInN1bSIsImNvbnRhaW5zVHlwZUhpZXJhcmNoeSIsInRvb2x0aXBUZXh0IiwidG9vbHRpcCIsInNlcnZpY2UiLCIkaW5qZWN0IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0MsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLENBQTNCLEVBQThCQyxTQUE5QixFQUF5QztBQUN0Qzs7QUFFQSxhQUFTQyxPQUFULEdBQW1COztBQUVmLGlCQUFTQyx1QkFBVCxDQUFpQ0MsV0FBakMsRUFBOEM7QUFDMUMsZ0JBQUksQ0FBQ0EsWUFBWUMsUUFBakIsRUFDSTs7QUFFSixnQkFBSUQsWUFBWUMsUUFBWixDQUFxQkMsT0FBckIsQ0FBNkIsR0FBN0IsSUFBb0MsQ0FBeEMsRUFBMkM7QUFDdkMsb0JBQUlDLHVCQUF1QkgsWUFBWUMsUUFBWixDQUFxQkcsS0FBckIsQ0FBMkIsR0FBM0IsQ0FBM0I7QUFDQUQsdUNBQXVCQSxxQkFBcUJFLEdBQXJCLENBQXlCLFVBQUNDLElBQUQsRUFBVTtBQUN0RCx3QkFBSUMsTUFBTSxFQUFWO0FBQ0Esd0JBQUlDLFdBQVdGLEtBQUtGLEtBQUwsQ0FBVyxHQUFYLENBQWY7QUFDQUcsd0JBQUlOLFFBQUosR0FBZU8sU0FBUyxDQUFULENBQWY7QUFDQUQsd0JBQUlFLFlBQUosR0FBbUJELFNBQVMsQ0FBVCxDQUFuQjtBQUNBRCx3QkFBSUcsZUFBSixHQUFzQkYsU0FBUyxDQUFULEVBQVlHLFNBQVosQ0FBc0JILFNBQVMsQ0FBVCxFQUFZTixPQUFaLENBQW9CLEdBQXBCLElBQTJCLENBQWpELENBQXRCOztBQUVBLHdCQUFJLENBQUNNLFNBQVMsQ0FBVCxFQUFZSSxRQUFaLENBQXFCLE9BQXJCLENBQUwsRUFBb0M7QUFBRTtBQUNsQ0wsNEJBQUlNLE9BQUosR0FBY0wsU0FBUyxDQUFULENBQWQ7QUFDQUQsNEJBQUlPLGNBQUosR0FBcUJOLFNBQVMsQ0FBVCxDQUFyQjtBQUNIO0FBQ0QsMkJBQU9ELEdBQVA7QUFDSCxpQkFac0IsQ0FBdkI7QUFhQVAsNEJBQVlHLG9CQUFaLEdBQW1DQSxvQkFBbkM7QUFDQUgsNEJBQVlDLFFBQVosR0FDSUUscUJBQXFCWSxNQUFyQixDQUE0QixVQUFDQyxHQUFELEVBQU1WLElBQU47QUFBQSwyQkFBZSxDQUFDVSxNQUFTQSxHQUFULFVBQW1CLEVBQXBCLElBQTBCVixLQUFLTCxRQUE5QztBQUFBLGlCQUE1QixFQUFvRixFQUFwRixDQURKO0FBRUFELDRCQUFZaUIscUJBQVosR0FBb0MsSUFBcEM7QUFDQWpCLDRCQUFZa0IsV0FBWixHQUEwQmYscUJBQXFCWSxNQUFyQixDQUE0QixVQUFDQyxHQUFELEVBQU1WLElBQU47QUFBQSwyQkFBZSxDQUFDVSxNQUFTQSxHQUFULGFBQXNCLEVBQXZCLEtBQzlEVixLQUFLTCxRQUR5RCxVQUM1Q0ssS0FBS0csWUFEdUMsU0FDdkJILEtBQUtJLGVBRGtCLEtBQ0dKLEtBQUtPLE9BQUwsVUFBb0JQLEtBQUtPLE9BQXpCLEdBQXFDLEVBRHhDLEtBQytDUCxLQUFLUSxjQUFMLFVBQTJCUixLQUFLUSxjQUFoQyxHQUFtRCxFQURsRyxDQUFmO0FBQUEsaUJBQTVCLEVBRXRCLEVBRnNCLENBQTFCO0FBR0gsYUF0QkQsTUFzQk87QUFDSCxvQkFBSUssVUFBYW5CLFlBQVlDLFFBQXpCLFdBQXVDRCxZQUFZUyxZQUFuRCxTQUFtRVQsWUFBWVUsZUFBbkY7QUFDQSxvQkFBSVYsWUFBWWEsT0FBWixJQUF1QmIsWUFBWWEsT0FBWixJQUF1QixNQUFsRCxFQUEwRDtBQUN0RE0sK0NBQXlCbkIsWUFBWWEsT0FBckM7QUFDSDs7QUFFRCxvQkFBSWIsWUFBWWMsY0FBWixJQUE4QmQsWUFBWWMsY0FBWixJQUE4QixNQUFoRSxFQUF3RTtBQUNwRUssc0RBQWdDbkIsWUFBWWMsY0FBNUM7QUFDSDs7QUFFRGQsNEJBQVlrQixXQUFaLEdBQTBCQyxPQUExQjtBQUNIO0FBQ0o7O0FBRUQsWUFBSUMsVUFBVTtBQUNWckIscUNBQXlCQTtBQURmLFNBQWQ7O0FBSUEsZUFBT3FCLE9BQVA7QUFDSDs7QUFFRHRCLFlBQVF1QixPQUFSLEdBQWtCLEVBQWxCOztBQUVBMUIsWUFBUTJCLE1BQVIsQ0FBZSw0QkFBZixFQUE2QyxDQUFDLElBQUQsQ0FBN0MsRUFDS0YsT0FETCxDQUNhLG1CQURiLEVBQ2tDdEIsT0FEbEM7QUFFSCxDQXhEQSxFQXdEQ0osTUF4REQsRUF3RFNBLE9BQU9DLE9BeERoQixFQXdEeUJELE9BQU82QixNQXhEaEMsQ0FBRCIsImZpbGUiOiI1MjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyI7XHJcbihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCAkLCB1bmRlZmluZWQpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBmdW5jdGlvbiBTZXJ2aWNlKCkge1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBwYXJzZVRoZU1lc3NhZ2VUeXBlRGF0YShtZXNzYWdlVHlwZSkge1xyXG4gICAgICAgICAgICBpZiAoIW1lc3NhZ2VUeXBlLnR5cGVOYW1lKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgaWYgKG1lc3NhZ2VUeXBlLnR5cGVOYW1lLmluZGV4T2YoJzsnKSA+IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlVHlwZUhpZXJhcmNoeSA9IG1lc3NhZ2VUeXBlLnR5cGVOYW1lLnNwbGl0KCc7Jyk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZUhpZXJhcmNoeSA9IG1lc3NhZ2VUeXBlSGllcmFyY2h5Lm1hcCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBvYmogPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2VnbWVudHMgPSBpdGVtLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgb2JqLnR5cGVOYW1lID0gc2VnbWVudHNbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgb2JqLmFzc2VtYmx5TmFtZSA9IHNlZ21lbnRzWzFdO1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5hc3NlbWJseVZlcnNpb24gPSBzZWdtZW50c1syXS5zdWJzdHJpbmcoc2VnbWVudHNbMl0uaW5kZXhPZignPScpICsgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFzZWdtZW50c1s0XS5lbmRzV2l0aCgnPW51bGwnKSkgeyAvL1NDIG1vbml0b3JpbmcgZmlsbHMgY3VsdHVyZSBvbmx5IGlmIFB1YmxpY0tleVRva2VuIGlzIGZpbGxlZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYmouY3VsdHVyZSA9IHNlZ21lbnRzWzNdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYmoucHVibGljS2V5VG9rZW4gPSBzZWdtZW50c1s0XTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9iajtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUubWVzc2FnZVR5cGVIaWVyYXJjaHkgPSBtZXNzYWdlVHlwZUhpZXJhcmNoeTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlLnR5cGVOYW1lID1cclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZUhpZXJhcmNoeS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gKHN1bSA/IGAke3N1bX0sIGAgOiAnJykgKyBpdGVtLnR5cGVOYW1lLCAnJyk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS5jb250YWluc1R5cGVIaWVyYXJjaHkgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUudG9vbHRpcFRleHQgPSBtZXNzYWdlVHlwZUhpZXJhcmNoeS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gKHN1bSA/IGAke3N1bX08YnI+IGAgOiAnJykgK1xyXG4gICAgICAgICAgICAgICAgICAgIGAke2l0ZW0udHlwZU5hbWV9IHwke2l0ZW0uYXNzZW1ibHlOYW1lfS0ke2l0ZW0uYXNzZW1ibHlWZXJzaW9ufWAgKyAoaXRlbS5jdWx0dXJlID8gYCB8JHtpdGVtLmN1bHR1cmV9YCA6ICcnKSArIChpdGVtLnB1YmxpY0tleVRva2VuID8gYCB8JHtpdGVtLnB1YmxpY0tleVRva2VufWAgOiAnJyksXHJcbiAgICAgICAgICAgICAgICAgICAgJycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRvb2x0aXAgPSBgJHttZXNzYWdlVHlwZS50eXBlTmFtZX0gfCAke21lc3NhZ2VUeXBlLmFzc2VtYmx5TmFtZX0tJHttZXNzYWdlVHlwZS5hc3NlbWJseVZlcnNpb259YDtcclxuICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlVHlwZS5jdWx0dXJlICYmIG1lc3NhZ2VUeXBlLmN1bHR1cmUgIT0gJ251bGwnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcCArPSBgIHwgQ3VsdHVyZT0ke21lc3NhZ2VUeXBlLmN1bHR1cmV9YDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZVR5cGUucHVibGljS2V5VG9rZW4gJiYgbWVzc2FnZVR5cGUucHVibGljS2V5VG9rZW4gIT0gJ251bGwnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcCArPSBgIHwgUHVibGljS2V5VG9rZW49JHttZXNzYWdlVHlwZS5wdWJsaWNLZXlUb2tlbn1gO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlLnRvb2x0aXBUZXh0ID0gdG9vbHRpcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIHZhciBzZXJ2aWNlID0ge1xyXG4gICAgICAgICAgICBwYXJzZVRoZU1lc3NhZ2VUeXBlRGF0YTogcGFyc2VUaGVNZXNzYWdlVHlwZURhdGFcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICByZXR1cm4gc2VydmljZTtcclxuICAgIH1cclxuXHJcbiAgICBTZXJ2aWNlLiRpbmplY3QgPSBbXTtcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnc2VydmljZXMubWVzc2FnZVR5cGVQYXJzZXInLCBbJ3NjJ10pXHJcbiAgICAgICAgLnNlcnZpY2UoJ21lc3NhZ2VUeXBlUGFyc2VyJywgU2VydmljZSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhciwgd2luZG93LmpRdWVyeSkpO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///529\n");

/***/ }),

/***/ 530:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    function controller($scope, $routeParams, $location, toastService, serviceControlService, monitoringService, historyPeriodsService, $filter, smallGraphsMinimumYAxis, largeGraphsMinimumYAxis, connectivityNotifier, messageTypeParser) {\n\n        $scope.endpointName = $routeParams.endpointName;\n        $scope.sourceIndex = $routeParams.sourceIndex;\n        $scope.showInstancesBreakdown = $routeParams.tab === 'instancesBreakdown';\n        $scope.loading = true;\n        $scope.largeGraphsMinimumYAxis = largeGraphsMinimumYAxis;\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n\n        var subscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        function mergeIn(destination, source) {\n            for (var propName in source) {\n                if (source.hasOwnProperty(propName)) {\n                    destination[propName] = source[propName];\n                }\n            }\n        }\n\n        $scope.buildUrl = function (selectedPeriodValue, showInstancesBreakdownTab) {\n            return '#/monitoring/endpoint/' + $scope.endpointName + '/' + $scope.sourceIndex + '?historyPeriod=' + selectedPeriodValue + '&tab=' + ($scope.showInstancesBreakdown ? 'instancesBreakdown' : 'messageTypeBreakdown');\n        };\n\n        $scope.showInstancesBreakdownTab = function (isVisible) {\n            $scope.showInstancesBreakdown = isVisible;\n        };\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            $scope.endpoint = {};\n\n            subscription = monitoringService.createEndpointDetailsSource($routeParams.endpointName, $routeParams.sourceIndex, selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection($routeParams.sourceIndex);\n                    if ($scope.endpoint && $scope.endpoint.instances) {\n                        $scope.endpoint.instances.forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n\n                    $scope.endpoint.isScMonitoringDisconnected = true;\n                } else {\n\n                    mergeIn($scope.endpoint, endpoint);\n\n                    connectivityNotifier.reportSuccessfulConnection($routeParams.sourceIndex);\n\n                    $scope.endpoint.instances.sort(function (first, second) {\n                        if (first.id < second.id) {\n                            return -1;\n                        }\n\n                        if (first.id > second.id) {\n                            return 1;\n                        }\n\n                        return 0;\n                    });\n\n                    $scope.loading = false;\n                    $scope.endpoint.messageTypes.forEach(function (messageType) {\n                        fillDisplayValues(messageType);\n                        messageTypeParser.parseTheMessageTypeData(messageType);\n                    });\n\n                    $scope.endpoint.isStale = true;\n                    $scope.endpoint.isScMonitoringDisconnected = false;\n\n                    $scope.endpoint.instances.forEach(function (instance) {\n                        fillDisplayValues(instance);\n                        serviceControlService.getExceptionGroupsForEndpointInstance(instance.id).then(function (result) {\n                            if (result.data.length > 0) {\n                                instance.serviceControlId = result.data[0].id;\n                                instance.errorCount = result.data[0].count;\n                            }\n                        }, function (err) {\n                            // Warn user?\n                        });\n                        $scope.endpoint.isStale = $scope.endpoint.isStale && instance.isStale;\n                    });\n                }\n\n                serviceControlService.getExceptionGroupsForLogicalEndpoint($scope.endpointName).then(function (result) {\n                    if (result.data.length > 0) {\n                        $scope.endpoint.serviceControlId = result.data[0].id;\n                        $scope.endpoint.errorCount = result.data[0].count;\n                    }\n                });\n            });\n        }\n\n        function fillDisplayValues(instance) {\n            $filter('graphduration')(instance.metrics.processingTime);\n            $filter('graphduration')(instance.metrics.criticalTime);\n            $filter('graphdecimal')(instance.metrics.throughput, 2);\n            $filter('graphdecimal')(instance.metrics.retries, 2);\n        }\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n        });\n\n        updateUI();\n    }\n\n    controller.$inject = ['$scope', '$routeParams', '$location', 'toastService', 'serviceControlService', 'monitoringService', 'historyPeriodsService', '$filter', 'smallGraphsMinimumYAxis', 'largeGraphsMinimumYAxis', 'connectivityNotifier', 'messageTypeParser'];\n\n    angular.module('endpoint_details').controller('endpointDetailsCtrl', controller);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///530\n");

/***/ }),

/***/ 531:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(532);\n\n        $routeProvider.when('/monitoring/endpoint/:endpointName/:sourceIndex', {\n            data: {\n                pageTitle: 'Endpoint Details'\n            },\n            template: template,\n            controller: 'endpointDetailsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    };\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('endpoint_details').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMucm91dGUuanM/NjViNiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwidW5kZWZpbmVkIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxTQUEzQixFQUFzQztBQUNuQzs7QUFFQSxhQUFTQyxhQUFULENBQXVCQyxjQUF2QixFQUF1QztBQUNuQyxZQUFJQyxXQUFXQyxtQkFBT0EsQ0FBQyxHQUFSLENBQWY7O0FBRUFGLHVCQUFlRyxJQUFmLENBQW9CLGlEQUFwQixFQUF1RTtBQUNuRUMsa0JBQU07QUFDRkMsMkJBQVc7QUFEVCxhQUQ2RDtBQUluRUosc0JBQVVBLFFBSnlEO0FBS25FSyx3QkFBWSxxQkFMdUQ7QUFNbkVDLDBCQUFjLElBTnFEO0FBT25FQyw0QkFBZ0I7QUFQbUQsU0FBdkU7QUFTSDs7QUFFRFQsa0JBQWNVLE9BQWQsR0FBd0IsQ0FDcEIsZ0JBRG9CLENBQXhCOztBQUlBWixZQUFRYSxNQUFSLENBQWUsa0JBQWYsRUFDS0MsTUFETCxDQUNZWixhQURaO0FBRUgsQ0F2QkEsRUF1QkVILE1BdkJGLEVBdUJVQSxPQUFPQyxPQXZCakIsQ0FBRCIsImZpbGUiOiI1MzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgdW5kZWZpbmVkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gcm91dGVQcm92aWRlcigkcm91dGVQcm92aWRlcikge1xyXG4gICAgICAgIGxldCB0ZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vdmlld3MvZW5kcG9pbnRfZGV0YWlscy5odG1sJyk7XHJcblxyXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9tb25pdG9yaW5nL2VuZHBvaW50LzplbmRwb2ludE5hbWUvOnNvdXJjZUluZGV4Jywge1xyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBwYWdlVGl0bGU6ICdFbmRwb2ludCBEZXRhaWxzJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdlbmRwb2ludERldGFpbHNDdHJsJyxcclxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgICAgICByZWxvYWRPblNlYXJjaDogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgcm91dGVQcm92aWRlci4kaW5qZWN0ID0gW1xyXG4gICAgICAgICckcm91dGVQcm92aWRlcidcclxuICAgIF07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2VuZHBvaW50X2RldGFpbHMnKVxyXG4gICAgICAgIC5jb25maWcocm91dGVQcm92aWRlcik7XHJcbn0gKHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMucm91dGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///531\n");

/***/ }),

/***/ 532:
/***/ (function(module, exports) {

eval("module.exports = \"<div class=container> <div ng-include=\\\"'modules/monitoring/views/monitoring_not_available.html'\\\" ng-if=loading></div> <div class=\\\"row monitoring-head\\\" ng-if=!loading> <div class=back-nav> <span class=fake-link aria-hidden=true>&#9664;</span> <a href=/#/monitoring>All endpoints</a> </div> <div class=\\\"col-xs-9 no-side-padding list-section\\\"> <h1 class=\\\"righ-side-ellipsis col-lg-max-10\\\" uib-tooltip={{endpointName}}> {{endpointName}} </h1> <div class=\\\"endpoint-status col-xs-2\\\"> <span ng-if=endpoint.isStale class=warning> <i class=\\\"fa pa-endpoint-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to endpoint\\\"></i> </span> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <a ng-if=endpoint.errorCount class=warning href=#/failed-messages/groups/{{endpointName}}/{{sourceIndex}}/{{endpoint.serviceControlId}}> <i class=\\\"fa fa-envelope\\\" uib-tooltip=\\\"{{endpoint.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{endpoint.errorCount | metricslargenumber}}</span> </a> </div> </div> <div class=\\\"col-xs-3 no-side-padding toolbar-menus\\\"> <ul class=\\\"nav nav-pills period-selector\\\"> <li role=presentation ng-repeat=\\\"period in periods\\\" ng-class=\\\"(period.value == selectedPeriod.value ? 'active' : 'notselected')\\\"> <a ng-click=selectPeriod(period) ng-href={{buildUrl(period.value)}}>{{period.text}}</a> </li> </ul> </div> </div> </div> <div class=\\\"container large-graphs\\\" ng-if=!loading> <div class=container> <div class=row> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-queue-length\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.queueLength first-data-series=endpoint.metricDetails.metrics.queueLength minimum-yaxis={{largeGraphsMinimumYAxis.queueLength}} plot-width=750 plot-height=200 first-series-color=#EA7E00 first-series-fill-color=#EADDCE class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=queue-length-values> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Queue length: The number of messages waiting to be processed in the input queue(s) of the endpoint.\\\"> Queue Length </span> </div> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.queueLength.latest | metricslargenumber:0}} <span ng-if=\\\"endpoint.isStale == false || endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.queueLength.average | metricslargenumber:0}} <span class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-message-retries-throughputs\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.throughput first-data-series=endpoint.metricDetails.metrics.throughput second-data-series=endpoint.metricDetails.metrics.retries minimum-yaxis={{largeGraphsMinimumYAxis.throughputRetries}} plot-width=750 plot-height=200 first-series-color=#176397 first-series-fill-color=#CADCE8 second-series-color=#CC1252 second-series-fill-color=#E9C4D1 class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=\\\"col-xs-6 no-side-padding throughput-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.throughput.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.throughput.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\\"col-xs-6 no-side-padding scheduled-retries-rate-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled Retries Rate </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.retries.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.retries.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-critical-processing-times\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.processingTime first-data-series=endpoint.metricDetails.metrics.criticalTime second-data-series=endpoint.metricDetails.metrics.processingTime minimum-yaxis={{largeGraphsMinimumYAxis.processingCritical}} plot-width=750 plot-height=200 first-series-color=#2700CB first-series-fill-color=#C4BCE5 second-series-color=#258135 second-series-fill-color=#BEE6C5 is-duration-graph=true class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=\\\"col-xs-6 no-side-padding processing-time-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.processingTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.latest | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.processingTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.average | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\\"col-xs-6 no-side-padding critical-time-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.criticalTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.latest | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.criticalTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.average | durationUnit}} </span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> </div> </div> </div> <div class=container ng-if=!loading> <busy ng-show=loading message=\\\"Loading details\\\"></busy> <div class=tabs> <h5 ng-class=\\\"{active: !showInstancesBreakdown}\\\"> <a ng-click=showInstancesBreakdownTab(false) ng-href=\\\"{{buildUrl(selectedPeriod.value, 'messageTypeBreakdown')}}\\\" class=ng-binding>Message Types</a> </h5> <h5 ng-class=\\\"{active: showInstancesBreakdown}\\\"> <a ng-click=showInstancesBreakdownTab(true) ng-href=\\\"{{buildUrl(selectedPeriod.value, 'instancesBreakdown')}}\\\" class=ng-binding>Instances</a> </h5> </div> <section ng-if=showInstancesBreakdown class=endpoint-instances> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <busy ng-show=loading message=\\\"Loading details\\\"></busy> <div ng-show=!loading class=\\\"row box box-no-click table-head-row\\\"> <div class=col-xs-8> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Instance Name </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\\"endpoint.instances.length == 0\\\" message=\\\"No messages processed in this period of time.\\\"></no-data> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"instance in endpoint.instances\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-8 endpoint-name\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-9 no-side-padding lead righ-side-ellipsis\\\" uib-tooltip={{instance.name}}> {{instance.name}} </div> <div class=\\\"col-xs-4 endpoint-status\\\"> <span class=warning ng-if=instance.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <span class=warning ng-if=instance.isStale> <i class=\\\"fa pa-endpoint-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to instance\\\"></i> </span> <span class=warning ng-if=instance.errorCount> <a ng-if=instance.errorCount class=\\\"warning btn\\\" href=#/failed-messages/groups/{{endpointName}}/{{sourceIndex}}/{{instance.serviceControlId}}> <i class=\\\"fa fa-envelope\\\" uib-tooltip=\\\"{{instance.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{instance.errorCount | metricslargenumber}}</span> </a> </span> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.throughput.displayValue}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.retries.displayValue}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=instance.metrics.processingTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\\" class=unit> {{instance.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\\"col-xs-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=instance.metrics.criticalTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\\" class=unit> {{instance.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> </section> <section ng-if=!showInstancesBreakdown class=endpoint-message-types> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <busy ng-show=loading message=\\\"Loading details\\\"></busy> <div ng-show=!loading class=\\\"row box box-no-click table-head-row\\\"> <div class=\\\"col-xs-4 col-xl-8\\\"> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Message type name </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\\"endpoint.messageTypes.length == 0\\\" message=\\\"No messages processed in this period of time.\\\"></no-data> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"messageType in endpoint.messageTypes\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-4 col-xl-8 endpoint-name\\\" uib-tooltip-html=messageType.tooltipText> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-9 no-side-padding lead message-type-label righ-side-ellipsis\\\"> <div class=lead> {{messageType.typeName ? messageType.typeName : 'Unknown'}} </div> </div> <div class=\\\"col-lg-4 no-side-padding endpoint-status message-type-status\\\"> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <span class=warning ng-if=endpoint.isStale> <i class=\\\"fa pa-endpoint-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to instance\\\"></i> </span> </div> </div> <div class=\\\"row message-type-properties\\\"> <div ng-show=\\\"{{messageType.typeName && messageType.typeName != 'null' && !messageType.containsTypeHierarchy}}\\\" class=message-type-part> {{messageType.assemblyName + '-' + messageType.assemblyVersion}} </div> <div ng-show=\\\"{{messageType.typeName && messageType.typeName != 'null' && messageType.containsTypeHierarchy}}\\\" class=message-type-part ng-repeat=\\\"type in messageType.messageTypeHierarchy\\\"> {{type.assemblyName + '-' + type.assemblyVersion}} </div> <div ng-show=\\\"{{messageType.culture && messageType.culture != 'null'}}\\\" class=message-type-part>{{'Culture=' + messageType.culture}}</div> <div ng-show=\\\"{{messageType.publicKeyToken && messageType.publicKeyToken != 'null'}}\\\" class=message-type-part>{{'PublicKeyToken=' + messageType.publicKeyToken}}</div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.throughput.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.retries.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=messageType.metrics.processingTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{messageType.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=messageType.metrics.criticalTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{messageType.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> </div> </div> </div> </div> </div> </div> </div> </section> </div> \";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///532\n");

/***/ }),

/***/ 533:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, undefined) {\n    'use strict';\n\n    angular.module('ui.particular.duration', []).filter('duration', ['formatter', function (formatter) {\n        return function (input) {\n            var time = formatter.formatTime(input);\n            return time.value + ' ' + time.unit;\n        };\n    }]).filter('durationValue', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).value;\n        };\n    }]).filter('durationUnit', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).unit;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcz85YjhlIl0sIm5hbWVzIjpbIndpbmRvdyIsImFuZ3VsYXIiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJmaWx0ZXIiLCJmb3JtYXR0ZXIiLCJpbnB1dCIsInRpbWUiLCJmb3JtYXRUaW1lIiwidmFsdWUiLCJ1bml0Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxTQUEzQixFQUFzQztBQUNuQzs7QUFFQUQsWUFBUUUsTUFBUixDQUFlLHdCQUFmLEVBQXlDLEVBQXpDLEVBQ0tDLE1BREwsQ0FDWSxVQURaLEVBQ3dCLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDbkQsZUFBTyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3BCLGdCQUFJQyxPQUFPRixVQUFVRyxVQUFWLENBQXFCRixLQUFyQixDQUFYO0FBQ0EsbUJBQVVDLEtBQUtFLEtBQWYsU0FBd0JGLEtBQUtHLElBQTdCO0FBQ0gsU0FIRDtBQUlILEtBTG1CLENBRHhCLEVBT0tOLE1BUEwsQ0FPWSxlQVBaLEVBTzZCLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDeEQsZUFBTyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3BCLG1CQUFPRCxVQUFVRyxVQUFWLENBQXFCRixLQUFyQixFQUE0QkcsS0FBbkM7QUFDSCxTQUZEO0FBR0gsS0FKd0IsQ0FQN0IsRUFZS0wsTUFaTCxDQVlZLGNBWlosRUFZNEIsQ0FBQyxXQUFELEVBQWMsVUFBVUMsU0FBVixFQUFxQjtBQUN2RCxlQUFPLFVBQVVDLEtBQVYsRUFBaUI7QUFDcEIsbUJBQU9ELFVBQVVHLFVBQVYsQ0FBcUJGLEtBQXJCLEVBQTRCSSxJQUFuQztBQUNILFNBRkQ7QUFHSCxLQUp1QixDQVo1QjtBQWlCSCxDQXBCQSxFQW9CQ1YsTUFwQkQsRUFvQlNBLE9BQU9DLE9BcEJoQixDQUFEIiwiZmlsZSI6IjUzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCB1bmRlZmluZWQpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgndWkucGFydGljdWxhci5kdXJhdGlvbicsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2R1cmF0aW9uJywgWydmb3JtYXR0ZXInLCBmdW5jdGlvbiAoZm9ybWF0dGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIHZhciB0aW1lID0gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke3RpbWUudmFsdWV9ICR7dGltZS51bml0fWA7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pXHJcbiAgICAgICAgLmZpbHRlcignZHVyYXRpb25WYWx1ZScsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpLnZhbHVlO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1dKVxyXG4gICAgICAgIC5maWx0ZXIoJ2R1cmF0aW9uVW5pdCcsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpLnVuaXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///533\n");

/***/ }),

/***/ 534:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function drawDataSeries(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var area = d3.area().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d) {\n            return scaleY(d);\n        }).y1(function () {\n            return scaleY(0);\n        }).curve(d3.curveLinear);\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataSeries');\n\n        group.append('path').datum(data.points).attr('d', area).attr('fill', fillColor).attr('opacity', 0.8).attr('stroke', fillColor);\n\n        group.append('path').datum(data.points).attr('d', line).attr('stroke', color).attr('stroke-width', 2.75).attr('fill', 'none');\n    }\n\n    function drawAverageLine(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataAverage');\n\n        group.append('path').datum(Array(data.points.length).fill(data.average)).attr('d', line).attr('stroke', color).attr('stroke-width', 1.5).attr('opacity', 0.5).attr('stroke-dasharray', '10,10');\n    }\n\n    function padToWholeValue(value) {\n        var emptyDataSetyAxisMax = 10;\n\n        if (!value) {\n            return emptyDataSetyAxisMax;\n        }\n\n        var upperBound = 10;\n\n        while (value > upperBound) {\n            upperBound *= 10;\n        }\n\n        upperBound /= 10;\n\n        return Math.floor(value / upperBound) * upperBound + upperBound;\n    }\n\n    angular.module('ui.particular.largeGraph', []).directive('largeGraph', function (formatter) {\n        return {\n            restrict: 'E',\n            scope: {\n                firstDataSeries: '=firstDataSeries',\n                secondDataSeries: '=secondDataSeries',\n                isDurationGraph: '=isDurationGraph',\n                minimumYaxis: '@',\n                width: '=plotWidth',\n                height: '=plotHeight'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.$watch('firstDataSeries', function () {\n\n                    var svg = element.find('svg')[0];\n\n                    d3.select(svg).selectAll('*').remove();\n\n                    var topMargin = 10;\n                    var bottomMargin = 5;\n                    var leftMargin = 60;\n\n                    var chart = d3.select(svg).attr('width', scope.width).attr('height', scope.height);\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var firstSeries = scope.firstDataSeries;\n                    var secondSeries = scope.secondDataSeries;\n\n                    var amountOfValues = Math.max(firstSeries.points.length, secondSeries ? secondSeries.points.length : 0) || 10;\n                    if (firstSeries.points.length === 0) {\n                        firstSeries.points = new Array(amountOfValues).fill(0);\n                    }\n                    var scaleX = d3.scaleLinear().domain([0, amountOfValues - 1]).range([leftMargin, width]);\n\n                    chart.append('rect').attr('width', width - leftMargin).attr('height', height - topMargin - bottomMargin).attr('transform', 'translate(' + leftMargin + ',' + topMargin + ')').attr('fill', '#F2F6F7');\n\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = Math.max(firstSeries.average, firstSeries.points.length > 0 ? d3.max(firstSeries.points) : 0, minimumYaxis);\n\n                    if (secondSeries && secondSeries.points.length > 0) {\n                        max = Math.max(max, secondSeries.average, d3.max(secondSeries.points));\n                    }\n\n                    var max = padToWholeValue(max);\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - bottomMargin, topMargin]);\n\n                    var yAxis = d3.axisLeft(scaleY).tickValues([0, max * 1 / 4, max * 1 / 2, max * 3 / 4, max]);\n\n                    if (scope.isDurationGraph) {\n                        yAxis = yAxis.tickFormat(function (v) {\n                            var formattedTime = formatter.formatTime(v);\n\n                            return formattedTime.value + '  ' + formattedTime.unit;\n                        });\n                    }\n\n                    chart.append('g').attr('class', 'y axis').attr('transform', 'translate(' + leftMargin + ', 0)').call(function (g) {\n                        g.call(yAxis);\n                        g.select('.domain').remove();\n                        g.selectAll('.tick line').attr('stroke', 'black').attr('stroke-width', '1.75').attr('opacity', 0.1).attr('x', 0).attr('x2', width - leftMargin);\n                        g.selectAll('.tick text').attr('x', -4).attr('fill', '#828282');\n                    });\n\n                    var drawSeries = function drawSeries(data, lineColor, fillColor) {\n                        drawDataSeries(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    var drawAverage = function drawAverage(data, lineColor, fillColor) {\n                        drawAverageLine(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    drawSeries(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawSeries(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n\n                    drawAverage(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawAverage(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n                });\n            }\n        };\n    });\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///534\n");

/***/ })

/******/ });